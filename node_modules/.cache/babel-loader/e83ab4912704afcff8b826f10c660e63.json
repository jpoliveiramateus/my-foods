{"ast":null,"code":"var _jsxFileName = \"/home/portuga/trybe-projetos/sd-021-b-project-recipes-app/src/context/Provider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport context from './context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Provider(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [foods, setFoods] = useState([]); // const [drinks, setDrinks] = useState([]);\n\n  useEffect(() => {\n    const fetchApiFood = async () => {\n      const response = await fetch('https://www.themealdb.com/api/json/v1/1/search.php?s=');\n      const data = await response.json();\n      const foodsList = data.slice(0, 12);\n      setFoods(foods);\n      console.log(foods);\n    };\n\n    fetchApiFood();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(context.Provider, {\n    value: foods,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Provider, \"YMM5M0iTqzJSbBHkFT1Cq0yNesc=\");\n\n_c = Provider;\nProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\nexport default Provider;\n\nvar _c;\n\n$RefreshReg$(_c, \"Provider\");","map":{"version":3,"names":["React","useEffect","useState","PropTypes","context","Provider","children","foods","setFoods","fetchApiFood","response","fetch","data","json","foodsList","slice","console","log","propTypes","node","isRequired"],"sources":["/home/portuga/trybe-projetos/sd-021-b-project-recipes-app/src/context/Provider.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport context from './context';\n\nfunction Provider({ children }) {\n  const [foods, setFoods] = useState([]);\n  // const [drinks, setDrinks] = useState([]);\n  useEffect(() => {\n    const fetchApiFood = async () => {\n      const response = await fetch('https://www.themealdb.com/api/json/v1/1/search.php?s=');\n      const data = await response.json();\n      const foodsList = data.slice(0, 12);\n      setFoods(foods);\n      console.log(foods);\n    };\n    fetchApiFood();\n  }, []);\n\n  return (\n    <context.Provider value={ foods }>\n      {children}\n    </context.Provider>\n  );\n}\n\nProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Provider;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AAEA,SAASC,QAAT,OAAgC;EAAA;;EAAA,IAAd;IAAEC;EAAF,CAAc;EAC9B,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC,CAD8B,CAE9B;;EACAD,SAAS,CAAC,MAAM;IACd,MAAMQ,YAAY,GAAG,YAAY;MAC/B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,uDAAD,CAA5B;MACA,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;MACA,MAAMC,SAAS,GAAGF,IAAI,CAACG,KAAL,CAAW,CAAX,EAAc,EAAd,CAAlB;MACAP,QAAQ,CAACD,KAAD,CAAR;MACAS,OAAO,CAACC,GAAR,CAAYV,KAAZ;IACD,CAND;;IAOAE,YAAY;EACb,CATQ,EASN,EATM,CAAT;EAWA,oBACE,QAAC,OAAD,CAAS,QAAT;IAAkB,KAAK,EAAGF,KAA1B;IAAA,UACGD;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAKD;;GAnBQD,Q;;KAAAA,Q;AAqBTA,QAAQ,CAACa,SAAT,GAAqB;EACnBZ,QAAQ,EAAEH,SAAS,CAACgB,IAAV,CAAeC;AADN,CAArB;AAIA,eAAef,QAAf"},"metadata":{},"sourceType":"module"}