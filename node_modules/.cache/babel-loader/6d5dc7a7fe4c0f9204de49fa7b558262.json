{"ast":null,"code":"var _jsxFileName = \"/home/portuga/trybe-projetos/sd-021-b-project-recipes-app/src/components/Categories.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport context from '../context/context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FIVE = 5;\nconst TWELVE = 12;\nconst urlFoods = 'https://www.themealdb.com/api/json/v1/1/search.php?s=';\n\nfunction Categories(_ref) {\n  _s();\n\n  let {\n    url,\n    category\n  } = _ref;\n  const [filters, setFilters] = useState([]);\n  const history = useHistory();\n  const {\n    setDrinks,\n    setFoods,\n    setCategoryName\n  } = useContext(context);\n  const [lastUrlFood, setLastUrlFood] = useState(urlFoods);\n  const [lastUrlDrink, setLastUrlDrinks] = useState('https://www.thecocktaildb.com/api/json/v1/1/search.php?s='); // const [actualUrlFood, setActualUrlFood] = useState(urlFoods);\n  // const [actualUrlDrink, setActualUrlDrinks] = useState('https://www.thecocktaildb.com/api/json/v1/1/search.php?s=');\n\n  useEffect(() => {\n    const fetchApiCategorys = async () => {\n      const response = await fetch(url);\n      const data = await response.json();\n      const newData = data[category].slice(0, FIVE);\n      setFilters(newData);\n    };\n\n    return fetchApiCategorys();\n  }, [url, category]);\n\n  const fetchCategories = async (urlCategory, page) => {\n    if (page === 'drinks') {\n      const response = await fetch(urlCategory);\n      const data = await response.json();\n      const newData = data.drinks.slice(0, TWELVE);\n      setDrinks(newData);\n    } else {\n      const response = await fetch(urlCategory);\n      const data = await response.json();\n      const newData = data.meals.slice(0, TWELVE);\n      setFoods(newData);\n    }\n  };\n\n  const fetchDefault = async () => {\n    const {\n      pathname\n    } = history.location;\n\n    if (pathname === '/foods') {\n      const response = await fetch('https://www.themealdb.com/api/json/v1/1/search.php?s=');\n      const data = await response.json();\n      const newData = data.meals.slice(0, TWELVE);\n      setFoods(newData);\n    } else {\n      const response = await fetch('https://www.thecocktaildb.com/api/json/v1/1/search.php?s=');\n      const data = await response.json();\n      const newData = data.drinks.slice(0, TWELVE);\n      setDrinks(newData);\n    }\n  }; // const filterCategory = (strCategory) => {\n  //   console.log('atual', actualUrlFood);\n  //   if (actualUrlFood === lastUrlFood) {\n  //     setActualUrlFood(urlFoods);\n  //     setLastUrlFood(actualUrlFood);\n  //   } else {\n  //     setActualUrlFood(`https://www.themealdb.com/api/json/v1/1/filter.php?c=${strCategory}`);\n  //     setLastUrlFood(actualUrlFood);\n  //   }\n  // };\n\n\n  const filterCategory = strCategory => {\n    setCategoryName(strCategory);\n    const {\n      pathname\n    } = history.location;\n    const fetchDrinks = `https://www.thecocktaildb.com/api/json/v1/1/filter.php?c=${strCategory}`;\n    const fetchMeals = `https://www.themealdb.com/api/json/v1/1/filter.php?c=${strCategory}`;\n    console.log('ultima', lastUrlFood);\n    console.log('atual', fetchMeals);\n\n    if (pathname === '/drinks' && fetchDrinks !== lastUrlDrink) {\n      fetchCategories(fetchDrinks, 'drinks');\n      setLastUrlDrinks(fetchDrinks);\n    } else if (fetchDrinks === lastUrlDrink) {\n      fetchDefault();\n      setLastUrlDrinks(fetchDrinks);\n    } else if (fetchMeals !== lastUrlFood) {\n      // console.log('filtrou');\n      // fetchCategories(fetchMeals, 'foods');\n      setLastUrlFood(fetchMeals); // fetchMeals = lastUrlFood;\n    } else if (fetchMeals === lastUrlFood) {\n      // console.log('else');\n      setLastUrlFood(urlFoods);\n      fetchCategories(urlFoods, 'foods');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      \"data-testid\": \"All-category-filter\",\n      onClick: () => fetchDefault(),\n      children: \"All\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), filters.map(filter => {\n      const {\n        strCategory\n      } = filter;\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        \"data-testid\": `${strCategory}-category-filter`,\n        onClick: () => filterCategory(strCategory),\n        children: strCategory\n      }, strCategory, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true);\n}\n\n_s(Categories, \"qxQzxAeTmzmgFAycpX6tEUfZ1oI=\", false, function () {\n  return [useHistory];\n});\n\n_c = Categories;\nCategories.propTypes = {\n  url: PropTypes.string.isRequired,\n  category: PropTypes.string.isRequired\n};\nexport default Categories;\n\nvar _c;\n\n$RefreshReg$(_c, \"Categories\");","map":{"version":3,"names":["React","useContext","useEffect","useState","PropTypes","useHistory","context","FIVE","TWELVE","urlFoods","Categories","url","category","filters","setFilters","history","setDrinks","setFoods","setCategoryName","lastUrlFood","setLastUrlFood","lastUrlDrink","setLastUrlDrinks","fetchApiCategorys","response","fetch","data","json","newData","slice","fetchCategories","urlCategory","page","drinks","meals","fetchDefault","pathname","location","filterCategory","strCategory","fetchDrinks","fetchMeals","console","log","map","filter","propTypes","string","isRequired"],"sources":["/home/portuga/trybe-projetos/sd-021-b-project-recipes-app/src/components/Categories.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport context from '../context/context';\n\nconst FIVE = 5;\nconst TWELVE = 12;\n\nconst urlFoods = 'https://www.themealdb.com/api/json/v1/1/search.php?s=';\n\nfunction Categories({ url, category }) {\n  const [filters, setFilters] = useState([]);\n  const history = useHistory();\n  const { setDrinks, setFoods, setCategoryName } = useContext(context);\n  const [lastUrlFood, setLastUrlFood] = useState(urlFoods);\n  const [lastUrlDrink, setLastUrlDrinks] = useState('https://www.thecocktaildb.com/api/json/v1/1/search.php?s=');\n  // const [actualUrlFood, setActualUrlFood] = useState(urlFoods);\n  // const [actualUrlDrink, setActualUrlDrinks] = useState('https://www.thecocktaildb.com/api/json/v1/1/search.php?s=');\n\n  useEffect(() => {\n    const fetchApiCategorys = async () => {\n      const response = await fetch(url);\n      const data = await response.json();\n      const newData = data[category].slice(0, FIVE);\n      setFilters(newData);\n    };\n    return fetchApiCategorys();\n  }, [url, category]);\n\n  const fetchCategories = async (urlCategory, page) => {\n    if (page === 'drinks') {\n      const response = await fetch(urlCategory);\n      const data = await response.json();\n      const newData = data.drinks.slice(0, TWELVE);\n      setDrinks(newData);\n    } else {\n      const response = await fetch(urlCategory);\n      const data = await response.json();\n      const newData = data.meals.slice(0, TWELVE);\n      setFoods(newData);\n    }\n  };\n\n  const fetchDefault = async () => {\n    const { pathname } = history.location;\n    if (pathname === '/foods') {\n      const response = await fetch('https://www.themealdb.com/api/json/v1/1/search.php?s=');\n      const data = await response.json();\n      const newData = data.meals.slice(0, TWELVE);\n      setFoods(newData);\n    } else {\n      const response = await fetch('https://www.thecocktaildb.com/api/json/v1/1/search.php?s=');\n      const data = await response.json();\n      const newData = data.drinks.slice(0, TWELVE);\n      setDrinks(newData);\n    }\n  };\n\n  // const filterCategory = (strCategory) => {\n  //   console.log('atual', actualUrlFood);\n  //   if (actualUrlFood === lastUrlFood) {\n  //     setActualUrlFood(urlFoods);\n  //     setLastUrlFood(actualUrlFood);\n  //   } else {\n  //     setActualUrlFood(`https://www.themealdb.com/api/json/v1/1/filter.php?c=${strCategory}`);\n  //     setLastUrlFood(actualUrlFood);\n  //   }\n  // };\n\n  const filterCategory = (strCategory) => {\n    setCategoryName(strCategory);\n    const { pathname } = history.location;\n    const fetchDrinks = `https://www.thecocktaildb.com/api/json/v1/1/filter.php?c=${strCategory}`;\n    const fetchMeals = `https://www.themealdb.com/api/json/v1/1/filter.php?c=${strCategory}`;\n\n    console.log('ultima', lastUrlFood);\n    console.log('atual', fetchMeals);\n\n    if (pathname === '/drinks' && fetchDrinks !== lastUrlDrink) {\n      fetchCategories(fetchDrinks, 'drinks');\n      setLastUrlDrinks(fetchDrinks);\n    } else if (fetchDrinks === lastUrlDrink) {\n      fetchDefault();\n      setLastUrlDrinks(fetchDrinks);\n    } else if (fetchMeals !== lastUrlFood) {\n      // console.log('filtrou');\n      // fetchCategories(fetchMeals, 'foods');\n      setLastUrlFood(fetchMeals);\n      // fetchMeals = lastUrlFood;\n    } else if (fetchMeals === lastUrlFood) {\n      // console.log('else');\n      setLastUrlFood(urlFoods);\n      fetchCategories(urlFoods, 'foods');\n    }\n  };\n\n  return (\n    <>\n      <button\n        type=\"button\"\n        data-testid=\"All-category-filter\"\n        onClick={ () => fetchDefault() }\n      >\n        All\n      </button>\n      {filters.map((filter) => {\n        const { strCategory } = filter;\n        return (\n          <button\n            type=\"button\"\n            key={ strCategory }\n            data-testid={ `${strCategory}-category-filter` }\n            onClick={ () => filterCategory(strCategory) }\n          >\n            {strCategory}\n          </button>\n        );\n      })}\n    </>\n  );\n}\n\nCategories.propTypes = {\n  url: PropTypes.string.isRequired,\n  category: PropTypes.string.isRequired,\n};\n\nexport default Categories;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}