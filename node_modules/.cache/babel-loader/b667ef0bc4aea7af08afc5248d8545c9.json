{"ast":null,"code":"var _jsxFileName = \"/home/portuga/trybe-projetos/sd-021-b-project-recipes-app/src/components/Categorys.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FIVE = 5;\n\nfunction Categorys(_ref) {\n  _s();\n\n  let {\n    url\n  } = _ref;\n  const [filters, setFilters] = useState([]);\n  useEffect(() => {\n    const fetchApiCategorys = async () => {\n      const response = await fetch(url);\n      const data = await response.json();\n      const newData = data.slice(0, FIVE);\n      setFilters(newData);\n    };\n\n    return fetchApiCategorys();\n  }, [url]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: filters.map(category => {\n      const {\n        strCategory\n      } = category;\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        children: strCategory\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 16\n      }, this);\n    })\n  }, void 0, false);\n}\n\n_s(Categorys, \"32gP0SeFR4dvXIorpf4OzJGpVeY=\");\n\n_c = Categorys;\nCategorys.propTypes = {\n  url: PropTypes.string.isRequired\n};\nexport default Categorys;\n\nvar _c;\n\n$RefreshReg$(_c, \"Categorys\");","map":{"version":3,"names":["React","useEffect","useState","PropTypes","FIVE","Categorys","url","filters","setFilters","fetchApiCategorys","response","fetch","data","json","newData","slice","map","category","strCategory","propTypes","string","isRequired"],"sources":["/home/portuga/trybe-projetos/sd-021-b-project-recipes-app/src/components/Categorys.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst FIVE = 5;\n\nfunction Categorys({ url }) {\n  const [filters, setFilters] = useState([]);\n\n  useEffect(() => {\n    const fetchApiCategorys = async () => {\n      const response = await fetch(url);\n      const data = await response.json();\n      const newData = data.slice(0, FIVE);\n      setFilters(newData);\n    };\n    return fetchApiCategorys();\n  }, [url]);\n\n  return (\n    <>\n      {filters.map((category) => {\n        const { strCategory } = category;\n        return <button type=\"button\">{strCategory}</button>;\n      })}\n    </>\n  );\n}\n\nCategorys.propTypes = {\n  url: PropTypes.string.isRequired,\n};\n\nexport default Categorys;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,MAAMC,IAAI,GAAG,CAAb;;AAEA,SAASC,SAAT,OAA4B;EAAA;;EAAA,IAAT;IAAEC;EAAF,CAAS;EAC1B,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,EAAD,CAAtC;EAEAD,SAAS,CAAC,MAAM;IACd,MAAMQ,iBAAiB,GAAG,YAAY;MACpC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACL,GAAD,CAA5B;MACA,MAAMM,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;MACA,MAAMC,OAAO,GAAGF,IAAI,CAACG,KAAL,CAAW,CAAX,EAAcX,IAAd,CAAhB;MACAI,UAAU,CAACM,OAAD,CAAV;IACD,CALD;;IAMA,OAAOL,iBAAiB,EAAxB;EACD,CARQ,EAQN,CAACH,GAAD,CARM,CAAT;EAUA,oBACE;IAAA,UACGC,OAAO,CAACS,GAAR,CAAaC,QAAD,IAAc;MACzB,MAAM;QAAEC;MAAF,IAAkBD,QAAxB;MACA,oBAAO;QAAQ,IAAI,EAAC,QAAb;QAAA,UAAuBC;MAAvB;QAAA;QAAA;QAAA;MAAA,QAAP;IACD,CAHA;EADH,iBADF;AAQD;;GArBQb,S;;KAAAA,S;AAuBTA,SAAS,CAACc,SAAV,GAAsB;EACpBb,GAAG,EAAEH,SAAS,CAACiB,MAAV,CAAiBC;AADF,CAAtB;AAIA,eAAehB,SAAf"},"metadata":{},"sourceType":"module"}