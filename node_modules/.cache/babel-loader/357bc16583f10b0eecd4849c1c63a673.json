{"ast":null,"code":"var _jsxFileName = \"/home/portuga/trybe-projetos/sd-021-b-project-recipes-app/src/components/ListIngredients.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport propTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport context from '../context/context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ListIngredients(_ref) {\n  _s();\n\n  let {\n    recipe,\n    setIsFinish\n  } = _ref;\n  const {\n    isSaveLocal\n  } = useContext(context);\n  const history = useHistory();\n  const {\n    pathname\n  } = history.location;\n  const [ingredients, setIngredients] = useState([]);\n  const id = pathname.split('/')[2];\n  const page = pathname.includes('drinks') ? 'cocktails' : 'meals';\n  useEffect(() => {\n    const listRecipe = Object.entries(recipe);\n    const listAllIngredients = listRecipe.filter(arr => arr[0].includes('strIngredient'));\n    const listIngredients = listAllIngredients.filter(arr => arr[1]);\n    const allIngredients = listIngredients.reduce((acc, arr, index) => {\n      acc = [...acc, `${index}-${arr[1]}`];\n      return acc;\n    }, []);\n    setIngredients(allIngredients);\n  }, [recipe]);\n\n  const markedIngredients = () => {\n    const recipesInProgress = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    ingredients.forEach((_ing, index) => {\n      if (ingredients.some(i => i === recipesInProgress[page][id][index])) {\n        setIsFinish(false);\n      } else {\n        setIsFinish(true);\n      }\n    });\n  };\n\n  const saveProgress = ing => {\n    const recipesInProgress = JSON.parse(localStorage.getItem('inProgressRecipes'));\n\n    if (recipesInProgress[page][id]) {\n      const isSaveIngredient = recipesInProgress[page][id].some(i => i === ing);\n\n      if (isSaveIngredient) {\n        const newRecipesInProgress = { ...recipesInProgress,\n          [page]: { ...recipesInProgress[page],\n            [id]: recipesInProgress[page][id].filter(i => i !== ing)\n          }\n        };\n        localStorage.setItem('inProgressRecipes', JSON.stringify(newRecipesInProgress));\n        markedIngredients();\n      } else {\n        const newRecipesInProgress = { ...recipesInProgress,\n          [page]: { ...recipesInProgress[page],\n            [id]: [...recipesInProgress[page][id], ing]\n          }\n        };\n        localStorage.setItem('inProgressRecipes', JSON.stringify(newRecipesInProgress));\n        markedIngredients();\n      }\n    } else {\n      const newRecipesInProgress = { ...recipesInProgress,\n        [page]: { ...recipesInProgress[page],\n          [id]: [ing]\n        }\n      };\n      localStorage.setItem('inProgressRecipes', JSON.stringify(newRecipesInProgress));\n      markedIngredients();\n    }\n  };\n\n  useEffect(() => {\n    const recipesInProgress = JSON.parse(localStorage.getItem('inProgressRecipes'));\n  }, [isSaveLocal]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column'\n    },\n    children: ingredients.map((ingredient, index) => /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: ingredient,\n      \"data-testid\": `${index}-ingredient-step`,\n      onChange: () => saveProgress(ingredient),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        name: ingredient,\n        id: ingredient,\n        value: ingredient\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), ingredient]\n    }, ingredient, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ListIngredients, \"b/FlbaqZQiFitEFxvEqjPy2+rKA=\", false, function () {\n  return [useHistory];\n});\n\n_c = ListIngredients;\nListIngredients.propTypes = {\n  recipe: propTypes.objectOf(propTypes.string).isRequired,\n  setIsFinish: propTypes.func.isRequired\n};\nexport default ListIngredients;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListIngredients\");","map":{"version":3,"names":["React","useContext","useEffect","useState","propTypes","useHistory","context","ListIngredients","recipe","setIsFinish","isSaveLocal","history","pathname","location","ingredients","setIngredients","id","split","page","includes","listRecipe","Object","entries","listAllIngredients","filter","arr","listIngredients","allIngredients","reduce","acc","index","markedIngredients","recipesInProgress","JSON","parse","localStorage","getItem","forEach","_ing","some","i","saveProgress","ing","isSaveIngredient","newRecipesInProgress","setItem","stringify","display","flexDirection","map","ingredient","objectOf","string","isRequired","func"],"sources":["/home/portuga/trybe-projetos/sd-021-b-project-recipes-app/src/components/ListIngredients.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport propTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport context from '../context/context';\n\nfunction ListIngredients({ recipe, setIsFinish }) {\n  const { isSaveLocal } = useContext(context);\n  const history = useHistory();\n  const { pathname } = history.location;\n  const [ingredients, setIngredients] = useState([]);\n  const id = pathname.split('/')[2];\n  const page = pathname.includes('drinks') ? 'cocktails' : 'meals';\n\n  useEffect(() => {\n    const listRecipe = Object.entries(recipe);\n    const listAllIngredients = listRecipe\n      .filter((arr) => arr[0].includes('strIngredient'));\n    const listIngredients = listAllIngredients.filter((arr) => arr[1]);\n    const allIngredients = listIngredients.reduce((acc, arr, index) => {\n      acc = [...acc, `${index}-${arr[1]}`];\n      return acc;\n    }, []);\n    setIngredients(allIngredients);\n  }, [recipe]);\n\n  const markedIngredients = () => {\n    const recipesInProgress = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    ingredients.forEach((_ing, index) => {\n      if (ingredients.some((i) => i === recipesInProgress[page][id][index])) {\n        setIsFinish(false);\n      } else {\n        setIsFinish(true);\n      }\n    });\n  };\n\n  const saveProgress = (ing) => {\n    const recipesInProgress = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    if (recipesInProgress[page][id]) {\n      const isSaveIngredient = recipesInProgress[page][id].some((i) => i === ing);\n      if (isSaveIngredient) {\n        const newRecipesInProgress = {\n          ...recipesInProgress,\n          [page]: {\n            ...recipesInProgress[page],\n            [id]: recipesInProgress[page][id].filter((i) => i !== ing),\n          },\n        };\n        localStorage.setItem('inProgressRecipes', JSON.stringify(newRecipesInProgress));\n        markedIngredients();\n      } else {\n        const newRecipesInProgress = {\n          ...recipesInProgress,\n          [page]: {\n            ...recipesInProgress[page],\n            [id]: [...recipesInProgress[page][id], ing],\n          },\n        };\n        localStorage.setItem('inProgressRecipes', JSON.stringify(newRecipesInProgress));\n        markedIngredients();\n      }\n    } else {\n      const newRecipesInProgress = {\n        ...recipesInProgress,\n        [page]: {\n          ...recipesInProgress[page],\n          [id]: [ing],\n        },\n      };\n      localStorage.setItem('inProgressRecipes', JSON.stringify(newRecipesInProgress));\n      markedIngredients();\n    }\n  };\n\n  useEffect(() => {\n    const recipesInProgress = JSON.parse(localStorage.getItem('inProgressRecipes'));\n  }, [isSaveLocal]);\n\n  return (\n    <div style={ { display: 'flex', flexDirection: 'column' } }>\n      {ingredients.map((ingredient, index) => (\n        <label\n          key={ ingredient }\n          htmlFor={ ingredient }\n          data-testid={ `${index}-ingredient-step` }\n          onChange={ () => saveProgress(ingredient) }\n        >\n          <input\n            type=\"checkbox\"\n            name={ ingredient }\n            id={ ingredient }\n            value={ ingredient }\n          />\n          {ingredient}\n        </label>\n      ))}\n    </div>\n  );\n}\n\nListIngredients.propTypes = {\n  recipe: propTypes.objectOf(propTypes.string).isRequired,\n  setIsFinish: propTypes.func.isRequired,\n};\n\nexport default ListIngredients;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}