{"ast":null,"code":"/*! clipboard-copy. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n\n/* global DOMException */\nmodule.exports = clipboardCopy;\n\nfunction makeError() {\n  return new DOMException('The request is not allowed', 'NotAllowedError');\n}\n\nasync function copyClipboardApi(text) {\n  // Use the Async Clipboard API when available. Requires a secure browsing\n  // context (i.e. HTTPS)\n  if (!navigator.clipboard) {\n    throw makeError();\n  }\n\n  return navigator.clipboard.writeText(text);\n}\n\nasync function copyExecCommand(text) {\n  // Put the text to copy into a <span>\n  const span = document.createElement('span');\n  span.textContent = text; // Preserve consecutive spaces and newlines\n\n  span.style.whiteSpace = 'pre';\n  span.style.webkitUserSelect = 'auto';\n  span.style.userSelect = 'all'; // Add the <span> to the page\n\n  document.body.appendChild(span); // Make a selection object representing the range of text selected by the user\n\n  const selection = window.getSelection();\n  const range = window.document.createRange();\n  selection.removeAllRanges();\n  range.selectNode(span);\n  selection.addRange(range); // Copy text to the clipboard\n\n  let success = false;\n\n  try {\n    success = window.document.execCommand('copy');\n  } finally {\n    // Cleanup\n    selection.removeAllRanges();\n    window.document.body.removeChild(span);\n  }\n\n  if (!success) throw makeError();\n}\n\nasync function clipboardCopy(text) {\n  try {\n    await copyClipboardApi(text);\n  } catch (err) {\n    // ...Otherwise, use document.execCommand() fallback\n    try {\n      await copyExecCommand(text);\n    } catch (err2) {\n      throw err2 || err || makeError();\n    }\n  }\n}","map":{"version":3,"names":["module","exports","clipboardCopy","makeError","DOMException","copyClipboardApi","text","navigator","clipboard","writeText","copyExecCommand","span","document","createElement","textContent","style","whiteSpace","webkitUserSelect","userSelect","body","appendChild","selection","window","getSelection","range","createRange","removeAllRanges","selectNode","addRange","success","execCommand","removeChild","err","err2"],"sources":["/home/portuga/my-foods/node_modules/clipboard-copy/index.js"],"sourcesContent":["/*! clipboard-copy. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* global DOMException */\n\nmodule.exports = clipboardCopy\n\nfunction makeError () {\n  return new DOMException('The request is not allowed', 'NotAllowedError')\n}\n\nasync function copyClipboardApi (text) {\n  // Use the Async Clipboard API when available. Requires a secure browsing\n  // context (i.e. HTTPS)\n  if (!navigator.clipboard) {\n    throw makeError()\n  }\n  return navigator.clipboard.writeText(text)\n}\n\nasync function copyExecCommand (text) {\n  // Put the text to copy into a <span>\n  const span = document.createElement('span')\n  span.textContent = text\n\n  // Preserve consecutive spaces and newlines\n  span.style.whiteSpace = 'pre'\n  span.style.webkitUserSelect = 'auto'\n  span.style.userSelect = 'all'\n\n  // Add the <span> to the page\n  document.body.appendChild(span)\n\n  // Make a selection object representing the range of text selected by the user\n  const selection = window.getSelection()\n  const range = window.document.createRange()\n  selection.removeAllRanges()\n  range.selectNode(span)\n  selection.addRange(range)\n\n  // Copy text to the clipboard\n  let success = false\n  try {\n    success = window.document.execCommand('copy')\n  } finally {\n    // Cleanup\n    selection.removeAllRanges()\n    window.document.body.removeChild(span)\n  }\n\n  if (!success) throw makeError()\n}\n\nasync function clipboardCopy (text) {\n  try {\n    await copyClipboardApi(text)\n  } catch (err) {\n    // ...Otherwise, use document.execCommand() fallback\n    try {\n      await copyExecCommand(text)\n    } catch (err2) {\n      throw (err2 || err || makeError())\n    }\n  }\n}\n"],"mappings":"AAAA;;AACA;AAEAA,MAAM,CAACC,OAAP,GAAiBC,aAAjB;;AAEA,SAASC,SAAT,GAAsB;EACpB,OAAO,IAAIC,YAAJ,CAAiB,4BAAjB,EAA+C,iBAA/C,CAAP;AACD;;AAED,eAAeC,gBAAf,CAAiCC,IAAjC,EAAuC;EACrC;EACA;EACA,IAAI,CAACC,SAAS,CAACC,SAAf,EAA0B;IACxB,MAAML,SAAS,EAAf;EACD;;EACD,OAAOI,SAAS,CAACC,SAAV,CAAoBC,SAApB,CAA8BH,IAA9B,CAAP;AACD;;AAED,eAAeI,eAAf,CAAgCJ,IAAhC,EAAsC;EACpC;EACA,MAAMK,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAb;EACAF,IAAI,CAACG,WAAL,GAAmBR,IAAnB,CAHoC,CAKpC;;EACAK,IAAI,CAACI,KAAL,CAAWC,UAAX,GAAwB,KAAxB;EACAL,IAAI,CAACI,KAAL,CAAWE,gBAAX,GAA8B,MAA9B;EACAN,IAAI,CAACI,KAAL,CAAWG,UAAX,GAAwB,KAAxB,CARoC,CAUpC;;EACAN,QAAQ,CAACO,IAAT,CAAcC,WAAd,CAA0BT,IAA1B,EAXoC,CAapC;;EACA,MAAMU,SAAS,GAAGC,MAAM,CAACC,YAAP,EAAlB;EACA,MAAMC,KAAK,GAAGF,MAAM,CAACV,QAAP,CAAgBa,WAAhB,EAAd;EACAJ,SAAS,CAACK,eAAV;EACAF,KAAK,CAACG,UAAN,CAAiBhB,IAAjB;EACAU,SAAS,CAACO,QAAV,CAAmBJ,KAAnB,EAlBoC,CAoBpC;;EACA,IAAIK,OAAO,GAAG,KAAd;;EACA,IAAI;IACFA,OAAO,GAAGP,MAAM,CAACV,QAAP,CAAgBkB,WAAhB,CAA4B,MAA5B,CAAV;EACD,CAFD,SAEU;IACR;IACAT,SAAS,CAACK,eAAV;IACAJ,MAAM,CAACV,QAAP,CAAgBO,IAAhB,CAAqBY,WAArB,CAAiCpB,IAAjC;EACD;;EAED,IAAI,CAACkB,OAAL,EAAc,MAAM1B,SAAS,EAAf;AACf;;AAED,eAAeD,aAAf,CAA8BI,IAA9B,EAAoC;EAClC,IAAI;IACF,MAAMD,gBAAgB,CAACC,IAAD,CAAtB;EACD,CAFD,CAEE,OAAO0B,GAAP,EAAY;IACZ;IACA,IAAI;MACF,MAAMtB,eAAe,CAACJ,IAAD,CAArB;IACD,CAFD,CAEE,OAAO2B,IAAP,EAAa;MACb,MAAOA,IAAI,IAAID,GAAR,IAAe7B,SAAS,EAA/B;IACD;EACF;AACF"},"metadata":{},"sourceType":"script"}